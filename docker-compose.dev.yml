version: '3.7'

services:

  nginx:
    build:
      context: ./services/nginx
    container_name: nginx
    hostname: nginx
    depends_on:
      - transport-ds
      - equipment-ds
      - cinemas-ds
      - cinemas-bot
      - watchman
      - redis
    volumes:
      - ./services/nginx/conf/dev:/etc/nginx/conf.d
    ports:
      - '80:80'

  transport-ds:
    image: node:14-alpine3.10
    container_name: transport-ds
    hostname: transport-ds
    working_dir: '/usr/src/app'
    volumes:
      - './services/transport-ds:/usr/src/app'
    environment:
      - NODE_ENV=dev
      - LOG_LEVEL=debug
      - SENTRY_DSN=$TRANSPORT_API_SENTRY_DSN
    ports:
      - '8081:8080'
    command: 'yarn start:dev'

  equipment-ds:
    image: node:14-alpine3.10
    container_name: equipment-ds
    hostname: equipment-ds
    working_dir: '/usr/src/app'
    volumes:
      - './services/equipment-ds:/usr/src/app'
    environment:
      - NODE_ENV=dev
      - LOG_LEVEL=debug
      - SENTRY_DSN=$EQUIPMENT_API_SENTRY_DSN
    ports:
      - '8082:8080'
    command: 'yarn start:dev'

  cinemas-ds:
    image: node:14-alpine3.10
    container_name: cinemas-ds
    hostname: cinemas-ds
    working_dir: '/usr/src/app'
    volumes:
      - './services/cinemas-ds:/usr/src/app'
    environment:
      - NODE_ENV=dev
      - LOG_LEVEL=debug
      - SENTRY_DSN=$CINEMAS_API_SENTRY_DSN
    ports:
      - '8083:8080'
    command: 'yarn start:dev'

  cinemas-bot:
    image: node:14-alpine3.10
    container_name: cinemas-bot
    hostname: cinemas-bot
    working_dir: '/usr/src/app'
    volumes:
      - './services/cinemas-bot:/usr/src/app'
    environment:
      - NODE_ENV=dev
      - LOG_LEVEL=debug
      - BOT_TOKEN=$CINEMAS_BOT_TOKEN
      - BOT_WEBHOOK=$CINEMAS_BOT_WEBHOOK
    ports:
      - '8084:8080'
    command: 'yarn start:dev'

  watchman:
    image: node:14-alpine3.10
    container_name: watchman
    hostname: watchman
    working_dir: '/usr/src/app'
    volumes:
      - './services/watchman:/usr/src/app'
    depends_on:
      - transport-ds
      - equipment-ds
      - mongo
      - redis
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - SENTRY_DSN=$WATCHMAN_API_SENTRY_DSN
    command: 'yarn start:dev'

  redis:
    image: redis:6.0-alpine
    container_name: redis
    hostname: redis
    ports:
      - '6379:6379'
    volumes:
      - redis:/data

  mongo:
    image: mongo:4.4
    container_name: mongo
    hostname: mongo
    ports:
      - '27017:27017'
    volumes:
      - mongo:/data/db

volumes:
  redis:
    name: redis
  mongo:
    name: mongo

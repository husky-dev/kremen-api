version: '3.7'

services:

  entry:
    build:
      context: ./services/entry
    container_name: entry
    hostname: entry
    depends_on:
      - transport-api
      - equipment-api
      - api
      # - watchman
      - redis
    volumes:
      - ./services/entry/conf/development:/etc/nginx/conf.d
    ports:
      - '80:80'

  transport-api:
    image: node:14-alpine3.10
    container_name: transport-api
    hostname: transport-api
    working_dir: '/usr/src/app'
    volumes:
      - './services/transport:/usr/src/app'
    command: 'yarn start:dev'

  equipment-api:
    image: node:14-alpine3.10
    container_name: equipment-api
    hostname: equipment-api
    working_dir: '/usr/src/app'
    volumes:
      - './services/equipment:/usr/src/app'
    command: 'yarn start:dev'

  # watchman:
  #   image: ghcr.io/husky-dev/kremen-api/watchman:latest
  #   container_name: watchman
  #   hostname: watchman
  #   depends_on:
  #     - api
  #     - mongo
  #     - redis
  #   restart: always

  api:
    image: ghcr.io/husky-dev/kremen-api/api:latest
    container_name: api
    hostname: api
    depends_on: 
      - redis
    restart: always

  redis:
    image: redis:6.0-alpine
    container_name: redis
    hostname: redis
    volumes:
      - redis:/data

  mongo:
    image: mongo:4.4
    container_name: mongo
    hostname: mongo
    volumes:
      - mongo:/data/db

volumes:
  redis:
    name: redis
  mongo:
    name: mongo
